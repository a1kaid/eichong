<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.wanma.app.dao.TblPowerstationMapper">


	<resultMap id="tblPowerstationResultMap" type="TblPowerstation">
		<id property="pkPowerstation" column="pk_PowerStation" />
		<result property="postName" column="poSt_Name" />
		<result property="postPic" column="poSt_Pic" />
		<result property="postDetailpic" column="poSt_DetailPic" />
		<result property="postAddress" column="poSt_Address" />
		<result property="postLongitude" column="poSt_Longitude" />
		<result property="postLatitude" column="poSt_Latitude" />
		<result property="postPhone" column="poSt_Phone" />
		<result property="postEleids" column="poSt_Eleids" />
		<result property="postStatus" column="poSt_Status" />
		<result property="postAreacode" column="poSt_AreaCode" />
		<result property="postCreatedate" column="poSt_Createdate" />
		<result property="postUpdatedate" column="poSt_Updatedate" />
		<result property="postRemark" column="poSt_Remark" />
		<result property="postPoweruser" column="poSt_PowerUser" />
		<result property="postIsappoint" column="poSt_IsAppoint" />
		<result property="distance" column="distance" />
	</resultMap>
	<resultMap id="pageResultMap" type="java.util.HashMap"
		extends="tblPowerstationResultMap"></resultMap>
	<resultMap id="findResultMap" type="java.util.HashMap"
		extends="tblPowerstationResultMap"></resultMap>
	<resultMap id="findMap" type="java.util.HashMap"></resultMap>

	<!--分享页查询电站信息 -->
	<select id="getSharPowerstation" parameterType="TblPowerstation"
		resultMap="tblPowerstationResultMap">
		<!-- select pk_PowerStation, poSt_Name, poSt_Pic, poSt_Phone, poSt_Address 
			from tbl_PowerStation where pk_PowerStation=#{pkPowerstation} -->
		select
		powerStation_id pk_PowerStation,
		powerStation_name poSt_Name,
		<!-- poSt_Pic, -->
		phone poSt_Phone,
		address poSt_Address
		from
		tbl_PowerStation
		where
		powerStation_id=#{pkPowerstation}
	</select>

	<!--分享页查询电站电桩数量 -->
	<select id="searchCount" parameterType="TblPowerstation"
		resultType="long">
		select
		count(pk_ElectricPile)
		from
		tbl_ElectricPile
		where
		elPi_RelevancePowerStation=#{pkPowerstation}
	</select>


	<insert id="insert" parameterType="TblPowerstation">
		insert into tbl_PowerStation (
		powerStation_name,
		<!-- poSt_Pic, poSt_DetailPic, -->
		address,
		longitude,
		latitude,
		phone,
		<!-- poSt_Eleids, -->
		status,
		gmt_create,
		gmt_modified,
		remark,
		powerUser
		<!-- poSt_IsAppoint -->
		)values (
		#{postName},
		<!-- #{postPic}, #{postDetailpic}, -->
		#{postAddress},
		#{postLongitude},
		#{postLatitude},
		#{postPhone},
		<!-- #{postEleids}, -->
		#{postStatus},
		#{postCreatedate},
		#{postUpdatedate},
		#{postRemark},
		#{postPoweruser}
		<!-- #{postIsappoint} -->
		)
	</insert>

	<update id="update" parameterType="TblPowerstation">
		update tbl_PowerStation set
		powerStation_name=#{postName},
		<!-- poSt_Pic=#{postPic}, poSt_DetailPic=#{postDetailpic}, -->
		address=#{postAddress},
		longitude=#{postLongitude},
		latitude=#{postLatitude},
		phone=#{postPhone},
		<!-- poSt_Eleids=#{postEleids}, -->
		status=#{postStatus},
		gmt_create=#{postCreatedate},
		gmt_modified=#{postUpdatedate},
		remark=#{postRemark},
		powerUser=#{postPoweruser}
		<!-- poSt_IsAppoint=#{postIsappoint} -->
		where
		powerStation_id=#{pkPowerstation}
	</update>

	<delete id="delete" parameterType="map">
		delete from
		tbl_PowerStation
		where
		powerStation_id=#{pkPowerstation}
	</delete>

	<select id="get" parameterType="map" resultMap="tblPowerstationResultMap">
		select
		owerStation_id pk_PowerStation,
		powerStation_name poSt_Name,
		<!-- poSt_Pic, poSt_DetailPic, -->
		address poSt_Address,
		longitude poSt_Longitude,
		latitude poSt_Latitude,
		phone poSt_Phone,
		<!-- poSt_Eleids, -->
		status poSt_Status,
		gmt_create poSt_Createdate,
		gmt_modified
		poSt_Updatedate,
		remark poSt_Remark,
		powerUser poSt_PowerUser
		<!-- poSt_IsAppoint -->
		from tbl_PowerStation
		where
		powerStation_id=#{pkPowerstation}
	</select>

	<select id="findOne" parameterType="map" resultMap="findResultMap">
		select
		powerStation_id pk_PowerStation,
		powerStation_name poSt_Name,
		address
		poSt_Address,
		longitude poSt_Longitude,
		latitude poSt_Latitude,
		phone
		poSt_Phone,
		<!-- poSt_Eleids, -->
		status poSt_Status,
		gmt_create poSt_Createdate,
		gmt_modified
		poSt_Updatedate,
		remark poSt_Remark,
		powerUser poSt_PowerUser
		<!-- poSt_IsAppoint -->
		from tbl_PowerStation pst
		where
		powerStation_id=#{pkPowerstation}
	</select>
	<select id="getPowerstationById" parameterType="map" resultMap="findResultMap">
		SELECT
		 (SELECT COUNT(1) FROM parking_lock WHERE parking_lock.power_station_id = pk_PowerStation) AS haslock ,
		t2.powerStation_id AS pk_PowerStation,
		t2.powerStation_name AS
		poSt_Name,
		getFullPath (
		'powerListImage',
		t2.powerStation_id
		) AS
		poSt_Pic,
		t2.address AS poSt_Address,
		t2.longitude AS poSt_Longitude,
		t2.latitude AS poSt_Latitude,
		t2.phone AS poSt_Phone,
		<!-- t2.poSt_Eleids, -->
		t2.status AS poSt_Status,
		t2.gmt_create AS poSt_Createdate,
		t2.gmt_modified AS poSt_Updatedate,
		t2.remark AS poSt_Remark,
		t2.powerUser AS poSt_PowerUser,
		t2.onlineTime AS poSt_OnlineTime,
		t1.zlHeadNum,
		t1.zlFreeHeadNum,
		t1.jlHeadNum,
		t1.jlFreeHeadNum,
		<if test="postLatitude != null">
			round(
			6378.138 * 2 * asin(
			sqrt(
			pow(
			sin(
			(
			30.30847712860622
			* pi() / 180 - t2.latitude * pi() / 180
			) / 2
			),
			2
			) +
			cos(30.30847712860622 * pi() / 180) * cos(t2.latitude * pi() /
			180) *
			pow(
			sin(
			(
			120.0755034061969 * pi() / 180 - t2.longitude * pi() / 180
			)
			/ 2
			),
			2
			)
			)
			) * 1000
			) AS distance,
		</if>
		(
		SELECT
		e.elPi_Parking_Fee
		FROM
		tbl_electricpile e
		WHERE
		e.elPi_RelevancePowerStation = t2.powerStation_id
		LIMIT 1
		) AS parkFee
		FROM
		(
		SELECT
		c.pk_id,
		c.pk_cpy_operate_id,
		c.pk_PowerStation,
		c.pk_ElectricPile,
		sum(
		CASE
		WHEN c.elPi_ChargingMode = 5 THEN
		c.num
		ELSE
		0
		END
		) AS zlHeadNum,
		sum(
		CASE
		WHEN c.elPi_ChargingMode = 14 THEN
		c.num
		ELSE
		0
		END
		) AS jlHeadNum,
		sum(
		CASE
		WHEN c.elPi_ChargingMode = 5 THEN
		c.freeNum
		ELSE
		0
		END
		) AS zlFreeHeadNum,
		sum(
		CASE
		WHEN c.elPi_ChargingMode = 14 THEN
		c.freeNum
		ELSE
		0
		END
		) AS jlFreeHeadNum
		FROM
		(
		SELECT
		a.pk_id,
		a.pk_cpy_operate_id,
		a.pk_PowerStation,
		a.pk_ElectricPile,
		(
		SELECT
		count(1)
		FROM
		tbl_electricpilehead head
		WHERE
		b.pk_ElectricPile =
		head.pk_ElectricPile
		AND head.ePHe_ElectricpileHeadState = 0
		) AS
		freeNum,
		(
		SELECT
		count(1)
		FROM
		tbl_electricpilehead head
		WHERE
		b.pk_ElectricPile = head.pk_ElectricPile
		) AS Num,
		b.elPi_ChargingMode
		FROM
		tbl_company_rela a,
		tbl_electricpile b
		WHERE
		a.pk_PowerStation =
		#{pkPowerstation}
		AND a.pk_ElectricPile = b.pk_ElectricPile
		AND
		a.pk_cpy_operate_id = (
		SELECT
		cpy_id
		FROM
		tbl_company
		WHERE
		cpy_number =
		1000
		)
		) c
		GROUP BY
		c.pk_PowerStation
		) t1,
		tbl_PowerStation t2
		WHERE
		t1.pk_PowerStation = t2.powerStation_id
		<!-- select last.pk_PowerStation, last.poSt_Name, getFullPath('powerListImage', 
			last.pk_PowerStation) as poSt_Pic, getFullPath('powerDetailImage', last.pk_PowerStation) 
			as poSt_DetailPic, last.poSt_Address,last.poSt_Longitude,last.poSt_Latitude,last.poSt_Phone, 
			last.poSt_Eleids,last.poSt_Status,last.poSt_Createdate, last.poSt_Updatedate,last.poSt_Remark,last.poSt_PowerUser,last.poSt_OnlineTime, 
			zlHeadNum,zlFreeHeadNum,jlHeadNum,jlFreeHeadNum, last.poSt_IsAppoint, last.ePSC_Name 
			powerState, last.powerStationSum, <if test="postLatitude != null"> distance, 
			</if> (select elPi_Parking_Fee from tbl_electricpile a where a.elPi_RelevancePowerStation 
			= #{pkPowerstation} limit 0,1) parkFee, (select max(pk_UserCollect) from 
			tbl_UserCollect where usCo_Userid = #{pkUserinfo} and usCo_Type = '2' and 
			usCo_Objectid=#{pkPowerstation}) isCollect from ( select pk_PowerStation, 
			poSt_Name, poSt_Pic, poSt_DetailPic, poSt_Address, poSt_Longitude, poSt_Latitude, 
			poSt_Phone, poSt_Eleids, poSt_Status, poSt_Createdate, poSt_Updatedate, poSt_Remark, 
			poSt_PowerUser, poSt_IsAppoint,epf.ePSC_Name,poSt_OnlineTime, (select count(b.pk_ElectricpileHead) 
			from tbl_electricpile a,tbl_electricpilehead b where a.pk_ElectricPile = 
			b.pk_ElectricPile and a.elPi_RelevancePowerStation = pst.pk_PowerStation 
			and a.elPi_ChargingMode = 5 ) zlHeadNum, (select count(b.pk_ElectricpileHead) 
			from tbl_electricpile a,tbl_electricpilehead b where a.pk_ElectricPile = 
			b.pk_ElectricPile and a.elPi_RelevancePowerStation = pst.pk_PowerStation 
			and a.elPi_ChargingMode = 5 and b.ePHe_ElectricpileHeadState = 0 and a.comm_status 
			= 1) zlFreeHeadNum, (select count(b.pk_ElectricpileHead) from tbl_electricpile 
			a,tbl_electricpilehead b where a.pk_ElectricPile = b.pk_ElectricPile and 
			a.elPi_RelevancePowerStation = pst.pk_PowerStation and a.elPi_ChargingMode 
			= 14 ) jlHeadNum, (select count(b.pk_ElectricpileHead) from tbl_electricpile 
			a,tbl_electricpilehead b where a.pk_ElectricPile = b.pk_ElectricPile and 
			a.elPi_RelevancePowerStation = pst.pk_PowerStation and a.elPi_ChargingMode 
			= 14 and b.ePHe_ElectricpileHeadState = 0 and a.comm_status = 1) jlFreeHeadNum, 
			<if test="postLatitude != null"> round(6378.138*2*asin(sqrt(pow(sin( (#{postLatitude}*pi()/180-pst.poSt_Latitude*pi()/180)/2),2)+cos(#{postLatitude}*pi()/180)*cos(pst.poSt_Latitude*pi()/180)* 
			pow(sin( (#{postLongitude}*pi()/180-pst.poSt_Longitude*pi()/180)/2),2)))*1000) 
			as distance, </if> elpe.powerStationSum from tbl_PowerStation pst LEFT JOIN 
			tbl_ElctrcPlScrnConfgurtn epf on pst.poSt_Status=epf.pk_ElctrcPlScrnConfgurtn 
			LEFT JOIN (select COUNT(*) powerStationSum,elPi_RelevancePowerStation from 
			tbl_ElectricPile epl GROUP BY epl.elPi_RelevancePowerStation) elpe on elpe.elPi_RelevancePowerStation=pst.pk_PowerStation 
			) last where last.pk_PowerStation=#{pkPowerstation} -->
	</select>
	<select id="find" parameterType="map" resultMap="findResultMap">
		select
		powerStation_id pk_PowerStation,
		powerStation_name poSt_Name,
		address poSt_Address,
		longitude poSt_Longitude,
		latitude poSt_Latitude,
		phone poSt_Phone,
		<!-- poSt_Eleids, -->
		status poSt_Status,
		gmt_create poSt_Createdate,
		gmt_modified
		poSt_Updatedate,
		remark poSt_Remark,
		powerUser poSt_PowerUser
		<!-- poSt_IsAppoint -->
		from
		tbl_PowerStation
		<where>
			<if test="pkPowerstation != null">
				powerStation_id=#{pkPowerstation}
			</if>
			<if test="postName != null">
				and powerStation_name=#{postName}
			</if>

			<if test="postAddress != null">
				and address=#{postAddress}
			</if>
			<if test="postLongitude != null">
				and longitude=#{postLongitude}
			</if>
			<if test="postLatitude != null">
				and latitude=#{postLatitude}
			</if>
			<if test="postPhone != null">
				and phone=#{postPhone}
			</if>
			<!-- <if test="postEleids != null"> and poSt_Eleids=#{postEleids} </if> -->
			<if test="postStatus != null">
				and status=#{postStatus}
			</if>

			<if test="postCreatedate != null">
				and gmt_create=#{postCreatedate}
			</if>
			<if test="postUpdatedate != null">
				and gmt_modified=#{postUpdatedate}
			</if>
			<if test="postRemark != null">
				and remark=#{postRemark}
			</if>
			<if test="postPoweruser != null">
				and powerUser=#{postPoweruser}
			</if>
			<!-- <if test="postIsappoint != null"> and poSt_IsAppoint=#{postIsappoint} 
				</if> -->
		</where>
	</select>

	<select id="page" parameterType="map" resultMap="pageResultMap">
		select
		powerStation_id pk_PowerStation,
		powerStation_name poSt_Name,
		address poSt_Address,
		longitude poSt_Longitude,
		latitude poSt_Latitude,
		phone poSt_Phone,
		<!-- poSt_Eleids, -->
		status poSt_Status,
		gmt_create poSt_Createdate,
		gmt_modified
		poSt_Updatedate,
		remark poSt_Remark,
		powerUser poSt_PowerUser
		<!-- poSt_IsAppoint -->
		from
		tbl_PowerStation
		<where>
			<if test="pkPowerstation != null">
				powerStation_id=#{pkPowerstation}
			</if>
			<if test="postName != null">
				and powerStation_name=#{postName}
			</if>
			<if test="postAddress != null">
				and address=#{postAddress}
			</if>
			<if test="postLongitude != null">
				and longitude=#{postLongitude}
			</if>
			<if test="postLatitude != null">
				and latitude=#{postLatitude}
			</if>
			<if test="postPhone != null">
				and phone=#{postPhone}
			</if>
			<!-- <if test="postEleids != null"> and poSt_Eleids=#{postEleids} </if> -->
			<if test="postStatus != null">
				and status=#{postStatus}
			</if>

			<if test="postCreatedate != null">
				and gmt_create=#{postCreatedate}
			</if>
			<if test="postUpdatedate != null">
				and gmt_modified=#{postUpdatedate}
			</if>
			<if test="postRemark != null">
				and remark=#{postRemark}
			</if>
			<if test="postPoweruser != null">
				and powerUser=#{postPoweruser}
			</if>
			<!-- <if test="postIsappoint != null"> and poSt_IsAppoint=#{postIsappoint} 
				</if> -->
		</where>
	</select>

	<select id="getPowerstation" parameterType="map" resultMap="findMap">
		SELECT
		last.pk_PowerStation,
		last.poSt_Name,
		last.poSt_Address,
		last.electricPileCount,
		last.avgServiceCharge,
		last.avgCommentStart,
		last.poSt_PowerUser,
		last.poSt_Longitude,
		last.poSt_Latitude,
		round(
		6378.138 * 2 * asin(
		sqrt(
		pow(
		sin(
		(
		#{postLatitude} * pi() / 180 -
		last.poSt_Latitude
		* pi() / 180
		) / 2
		),
		2
		) + cos(#{postLatitude} * pi() /
		180) * cos(
		last.poSt_Latitude
		* pi() / 180
		) * pow(
		sin(
		(
		#{postLongitude}* pi() / 180 - last.poSt_Longitude * pi()
		/ 180
		) / 2
		),
		2
		)
		)
		) * 1000
		) distance
		FROM
		(
		SELECT
		pst.powerStation_id AS
		pk_PowerStation,
		pst.powerStation_name AS poSt_Name,
		pst.address AS
		poSt_Address,
		count(epl2.pk_ElectricPile) electricPileCount,
		avg(epl2.raIn_ServiceCharge) avgServiceCharge,
		avg(epl2.prCo_CommentStart) avgCommentStart,
		pst.powerUser AS
		poSt_PowerUser,
		pst.longitude AS poSt_Longitude,
		pst.latitude AS
		poSt_Latitude
		FROM
		(
		SELECT
		*
		FROM
		tbl_PowerStation
		WHERE
		STATUS != 0
		AND
		STATUS != 3
		AND STATUS != 5
		) pst
		LEFT JOIN (
		SELECT
		epl.elPi_RelevancePowerStation,
		rif.raIn_ServiceCharge,
		epl.pk_ElectricPile,
		pct2.prCo_CommentStart
		FROM
		tbl_ElectricPile epl
		LEFT JOIN tbl_RateInformation rif ON rif.pk_RateInformation =
		epl.elPi_RateInformationId
		LEFT JOIN (
		SELECT
		avg(prCo_CommentStart)
		prCo_CommentStart,
		prCo_ProductId
		FROM
		tbl_ProductComment pct
		WHERE
		pct.prCo_Comment_type = 1
		GROUP BY
		prCo_ProductId
		) pct2 ON
		epl.pk_ElectricPile = pct2.prCo_ProductId
		) epl2 ON
		pst.powerStation_id
		= epl2.elPi_RelevancePowerStation
		GROUP BY
		pst.powerStation_id
		) last
		<choose>
			<when
				test="(electricPrices!=null and electricPrices==2) or (electricEvaluate!= null and electricEvaluate==2)">
				<where>
					1=1
					<if test="postPoweruser != null">
						and last.poSt_PowerUser=#{postPoweruser}<!-- 电桩查找 列表模式，车辆类型 -->
					</if>
					<if test="screenRadius != null">
					       <![CDATA[ 
					        and round(6378.138*2*asin(sqrt(pow(sin( (#{postLatitude}*pi()/180-last.poSt_Latitude*pi()/180)/2),2)+cos(#{postLatitude}*pi()/180)*cos(last.poSt_Latitude*pi()/180)* 
				              pow(sin( (#{postLongitude}*pi()/180-last.poSt_Longitude*pi()/180)/2),2)))*1000) 
					        <=#{screenRadius}
					       ]]>
					</if>
					<if test="searchName != null">
						and last.poSt_Name like concat('%',#{searchName},'%')
					</if>
				</where>

				order by
				<if test="electricPrices!=null and electricPrices==2">
					last.avgServiceCharge asc<!-- 电桩查找 列表模式，价格排序 price:默认值为1 2-按照价高最优排序 -->
				</if>
				<if test="electricEvaluate!= null and electricEvaluate==2">
					<if test="electricPrices!=null and electricPrices==2">,</if>
					last.avgCommentStart desc<!-- 电桩查找 列表模式，好评排序 price:默认值为1 2-按照好评最优排序 -->
				</if>
			</when>
			<otherwise>
				<where>
					1=1
					<if test="postPoweruser != null">
						and last.poSt_PowerUser=#{postPoweruser}<!-- 电桩查找 列表模式，车辆类型 -->
					</if>
					<if test="screenRadius != null">
					       <![CDATA[ 
					        and round(6378.138*2*asin(sqrt(pow(sin( (#{postLatitude}*pi()/180-last.poSt_Latitude*pi()/180)/2),2)+cos(#{postLatitude}*pi()/180)*cos(last.poSt_Latitude*pi()/180)* 
				              pow(sin( (#{postLongitude}*pi()/180-last.poSt_Longitude*pi()/180)/2),2)))*1000) 
					        <=#{screenRadius}
					       ]]>
					</if>
					<if test="searchName != null">
						and last.poSt_Name like concat('%',#{searchName},'%')
					</if>
				</where>
			</otherwise>
		</choose>


	</select>
	<select id="getSearchPowerStationList" parameterType="map"
		resultMap="findMap">
		SELECT
		last.pk_PowerStation,
		last.poSt_Name,
		last.poSt_Address,
		last.electricPileCount,
		format(last.avgServiceCharge, 2)
		avgServiceCharge,
		CASE
		WHEN last.avgCommentStar IS NULL THEN
		5
		ELSE
		last.avgCommentStar
		END avgCommentStar,
		last.poSt_PowerUser,
		last.poSt_Longitude,
		last.poSt_Latitude,
		round(
		6378.138 * 2 * asin(
		sqrt(
		pow(
		sin(
		(
		#{Latitude}* pi() / 180 - last.poSt_Latitude * pi() /
		180
		) / 2
		),
		2
		) + cos(#{Latitude} * pi() / 180) * cos(
		last.poSt_Latitude
		* pi() / 180
		) *
		pow(
		sin(
		(
		#{Longitude} * pi() / 180 -
		last.poSt_Longitude * pi() / 180
		) / 2
		),
		2
		)
		)
		) * 1000
		) distance
		FROM
		(
		SELECT
		pst.powerStation_id AS pk_PowerStation,
		pst.powerStation_name AS
		poSt_Name,
		pst.address AS poSt_Address,
		count(epl2.pk_ElectricPile)
		electricPileCount,
		avg(epl2.raIn_ServiceCharge) avgServiceCharge,
		avg(epl2.prCo_CommentStar) avgCommentStar,
		pst.powerUser AS
		poSt_PowerUser,
		pst.longitude AS poSt_Longitude,
		pst.latitude AS
		poSt_Latitude
		FROM
		(
		SELECT
		*
		FROM
		tbl_PowerStation
		WHERE
		STATUS != 0
		AND
		STATUS != 3
		AND STATUS != 5
		AND address LIKE concat('%', #{keyword},
		'%')
		) pst
		LEFT JOIN (
		SELECT
		epl.elPi_RelevancePowerStation,
		rif.raIn_ServiceCharge,
		epl.pk_ElectricPile,
		pct2.prCo_CommentStar
		FROM
		tbl_ElectricPile epl
		LEFT JOIN tbl_RateInformation rif ON
		rif.pk_RateInformation =
		epl.elPi_RateInformationId
		LEFT JOIN (
		SELECT
		avg(pss_CommentStar) prCo_CommentStar,
		pss_PsId prCo_ProductId
		FROM
		tbl_powerstationstar pct
		WHERE
		pct.pss_Utatus = 0
		GROUP BY
		pss_PsId
		) pct2
		ON epl.pk_ElectricPile = pct2.prCo_ProductId
		) epl2 ON
		pst.powerStation_id = epl2.elPi_RelevancePowerStation
		GROUP BY
		pst.powerStation_id
		) last
		WHERE
		1 = 1
		<if test="orderType==1">
			order by distance
		</if>
		<if test="orderType==2">
			order by avgServiceCharge
		</if>
		<if test="orderType==3">
			order by avgCommentStar
		</if>
	</select>

	<select id="getPowerstationN" parameterType="map" resultType="hashmap">
		SELECT
		*
		FROM
		(
		SELECT
		last.pk_PowerStation,
		last.poSt_Name,
		last.poSt_Address,
		last.electricPileCount,
		zlHeadNum,
		zlFreeHeadNum,
		jlHeadNum,
		jlFreeHeadNum,
		raIn_QuantumDate,
		raIn_TipTimeTariff,
		raIn_PeakElectricityPrice,
		raIn_UsualPrice,
		raIn_ValleyTimePrice,
		FORMAT(last.avgServiceCharge, 2) avgServiceCharge,
		FORMAT(last.avgCommentStart, 1) avgCommentStart,
		last.poSt_PowerUser,
		last.poSt_Longitude,
		last.poSt_Latitude,
		round(
		6378.138 * 2 * asin(
		sqrt(
		pow(
		sin(
		(
		#{postLatitude} * pi() / 180 - last.poSt_Latitude * pi()
		/ 180
		) / 2
		),
		2
		) + cos(#{postLatitude}* pi() / 180) * cos(
		last.poSt_Latitude * pi() / 180
		) *
		pow(
		sin(
		(
		#{postLongitude} * pi() /
		180 - last.poSt_Longitude * pi() / 180
		) / 2
		),
		2
		)
		)
		) * 1000
		) distance,
		comm_status,
		ePHe_ElectricpileHeadState
		FROM
		(
		SELECT
		powerStation_id AS
		pk_PowerStation,
		powerStation_name AS poSt_Name,
		address AS
		poSt_Address,
		count(epl2.pk_ElectricPile) electricPileCount,
		avg(epl2.raIn_ServiceCharge) avgServiceCharge,
		avg(epl2.prCo_CommentStart) avgCommentStart,
		powerUser AS
		poSt_PowerUser,
		longitude AS poSt_Longitude,
		latitude AS poSt_Latitude,
		comm_status,
		ePHe_ElectricpileHeadState,
		raIn_QuantumDate,
		raIn_TipTimeTariff,
		raIn_PeakElectricityPrice,
		raIn_UsualPrice,
		raIn_ValleyTimePrice,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile =
		b.pk_ElectricPile
		AND a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND a.elPi_ChargingMode = 5
		) zlHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile = b.pk_ElectricPile
		AND
		a.elPi_RelevancePowerStation = pst.powerStation_id
		AND
		a.elPi_ChargingMode = 5
		AND b.ePHe_ElectricpileHeadState = 0
		AND
		a.comm_status = 1
		) zlFreeHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile =
		b.pk_ElectricPile
		AND a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND a.elPi_ChargingMode = 14
		) jlHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile = b.pk_ElectricPile
		AND
		a.elPi_RelevancePowerStation = pst.powerStation_id
		AND
		a.elPi_ChargingMode = 14
		AND b.ePHe_ElectricpileHeadState = 0
		AND
		a.comm_status = 1
		) jlFreeHeadNum
		FROM
		(
		SELECT
		*
		FROM
		tbl_PowerStation
		WHERE
		STATUS = 15
		) pst
		LEFT JOIN (
		SELECT
		epl.elPi_RelevancePowerStation,
		rif.raIn_ServiceCharge,
		epl.pk_ElectricPile,
		elPi_ChargingMode,
		elPi_State,
		raIn_QuantumDate,
		raIn_TipTimeTariffPrice AS
		raIn_TipTimeTariff,
		raIn_PeakElectricityPrice AS
		raIn_PeakElectricityPrice,
		raIn_UsualPrice AS raIn_UsualPrice,
		raIn_ValleyTimePrice AS raIn_ValleyTimePrice,
		CASE
		WHEN
		pct2.prCo_CommentStart IS NULL THEN
		0
		ELSE
		prCo_CommentStart
		END
		prCo_CommentStart,
		comm_status,
		elPi_PowerInterface
		FROM
		(
		SELECT
		elPi_RelevancePowerStation,
		pk_ElectricPile,
		elPi_RateInformationId,
		comm_status,
		elPi_ChargingMode,
		elPi_State,
		elPi_PowerInterface
		FROM
		tbl_electricpile
		WHERE
		elPi_Binding = 1
		
		) epl
		LEFT JOIN
		tbl_RateInformation rif ON rif.pk_RateInformation =
		epl.elPi_RateInformationId
		LEFT JOIN (
		SELECT
		elPi_RelevancePowerStation
		prCo_ProductId,
		avg(eps_CommentStar) prCo_CommentStart
		FROM
		tbl_electricpilestar pct,
		tbl_electricpile te
		WHERE
		pct.eps_EpId =
		te.pk_ElectricPile
		AND pct.eps_Utatus = 0
		AND
		te.elPi_RelevancePowerStation != 0
		GROUP BY
		te.elPi_RelevancePowerStation
		) pct2 ON epl.elPi_RelevancePowerStation
		= pct2.prCo_ProductId
		) epl2 ON pst.powerStation_id =
		epl2.elPi_RelevancePowerStation
		LEFT JOIN (
		SELECT
		pk_ElectricPile
		head_ep_pk,
		ePHe_ElectricpileHeadState
		FROM
		tbl_electricpilehead
		WHERE
		1 =
		1
		) c ON epl2.pk_ElectricPile = c.head_ep_pk
		WHERE
		1 = 1
		<if test="headStatus != null"> and ePHe_ElectricpileHeadState = #{headStatus}</if>
		<if test="connectStatus != null and connectStatus != 0"> and comm_status = #{connectStatus}</if>
		<if test="chargingMode != null"> and elPi_ChargingMode = #{chargingMode}</if>
		<if test="postStatus != null"> and elPi_State = #{postStatus}</if>
		<if test="elpiPowerinterface != null"> and elPi_PowerInterface = #{elpiPowerinterface}</if>
		<if test="searchName != null"> and address like concat('%',#{searchName},'%')</if>
		GROUP BY pst.powerStation_id
		) last) a where distance &lt; 15000

		<if test="electricPrices!=null">
			order by avgServiceCharge
		</if>
		<if test="electricEvaluate!=null">
			order by avgCommentStart desc
		</if>
		<if test="screenRadius!=null">
			order by distance
		</if>

	</select>

	<select id="getPowerstationForMap" parameterType="map"
		resultMap="findMap">
		select
		last.powerStation_id AS pk_PowerStation,
		last. STATUS AS
		poSt_Status,
		last.longitude AS poSt_Longitude,
		last.latitude AS
		poSt_Latitude,
		last.elPi_PowerUser,
		powerStation_name AS poSt_Name,
		address AS poSt_Address,
		<!-- poSt_IsAppoint, -->
		province_code AS poSt_OwnProvinceCode,
		city_code AS poSt_OwnCityCode,
		area_code AS poSt_OwnCountyCode
		from
		(SELECT *
		from (select * from
		tbl_powerstation where
		STATUS!=3 and
		STATUS!=5 and
		STATUS!=0
		<if test="postAreacode != null">
			and city_code = #{postAreacode}
		</if>
		<if test="postUpdatedate != null">
			and gmt_modified &gt; #{postUpdatedate}
		</if>
		) a
		LEFT JOIN
		(select
		pk_ElectricPile,elPi_Binding,elPi_RelevancePowerStation,elPi_ChargingMode,elPi_ChargingModeName,elPi_PowerUser,
		comm_status,elPi_PowerInterface
		from tbl_electricpile where
		elPi_Binding=1
		<if test="postPoweruser != null">
			and (elPi_PowerUser=#{postPoweruser} or elPi_PowerUser=13)
		</if>
		) b on a.powerStation_id = b.elPi_RelevancePowerStation
		left JOIN
		(SELECT pk_ElectricPile head_ep_pk,ePHe_ElectricpileHeadState from
		tbl_electricpilehead where 1=1) c
		ON b.pk_ElectricPile = c.head_ep_pk
		where elPi_RelevancePowerStation is not null
		<if test="headStatus != null"> and ePHe_ElectricpileHeadState = #{headStatus}</if>
		<if test="connectStatus != null and connectStatus != 0"> and comm_status = #{connectStatus}</if>
		<if test="chargingMode != null and chargingMode != 1"> and elPi_ChargingMode = #{chargingMode}</if>
		<if test="elpiPowerinterface != null"> and elPi_PowerInterface = #{elpiPowerinterface}</if>
		GROUP BY a.powerStation_id) last
		where 1=1
		<if test="postStatus != null and postStatus!=0">
			and last.STATUS=#{postStatus}
		</if>
		<!-- <if test="postIsappoint != null and postIsappoint!=0"> and last.poSt_IsAppoint=#{postIsappoint} 
			</if> -->

	</select>

	<select id="getAllPsList" resultType="HashMap">
		SELECT
		powerStation_id as
		pk_PowerStation,
		powerStation_name as poSt_Name,
		address as
		poSt_Address,
		longitude as poSt_Longitude,
		latitude as poSt_Latitude
		FROM
		tbl_powerstation
		WHERE
		STATUS IN (10, 15)
	</select>

	<select id="getAnchorSummaryPs" parameterType="map" resultType="map">
		SELECT
		<!-- poSt_IsAppoint isAppoint, -->
		round(
		6378.138 * 2 * asin(
		sqrt(
		pow(
		sin(
		(
		#{lat} * pi() / 180 - latitude
		*
		pi() / 180
		) / 2
		),
		2
		) + cos(#{lat}* pi() / 180) * cos(latitude * pi() /
		180) * pow(
		sin(
		(
		#{lng} * pi() / 180 - longitude * pi() / 180
		) / 2
		),
		2
		)
		)
		) *
		1000
		) distance,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile =
		b.pk_ElectricPile
		AND a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND a.elPi_ChargingMode = 5
		) zlHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile = b.pk_ElectricPile
		AND
		a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND
		a.elPi_ChargingMode = 5
		AND
		b.ePHe_ElectricpileHeadState = 0
		AND
		a.comm_status = 1
		) zlFreeHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile =
		b.pk_ElectricPile
		AND a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND a.elPi_ChargingMode = 14
		) jlHeadNum,
		(
		SELECT
		count(b.pk_ElectricpileHead)
		FROM
		tbl_electricpile a,
		tbl_electricpilehead b
		WHERE
		a.pk_ElectricPile = b.pk_ElectricPile
		AND
		a.elPi_RelevancePowerStation =
		pst.powerStation_id
		AND
		a.elPi_ChargingMode = 14
		AND
		b.ePHe_ElectricpileHeadState = 0
		AND
		a.comm_status = 1
		) jlFreeHeadNum
		FROM
		tbl_powerstation pst
		where
		pst.pk_PowerStation = #{eid}
	</select>

	<select id="getCtyPoints" parameterType="map" resultType="map">
		<!-- select count(1) pCount,t.poSt_OwnCityCode cd from tbl_powerstation 
			t where t.poSt_OwnProvinceCode = #{val} group by t.poSt_OwnCityCode -->
		SELECT
		count(1) pCount,
		(select CONCAT(a.city_Longitude,',',a.city_Latitude) from tb_m_city a where a.city_id=t.city_code) cd
		FROM
		tbl_powerstation t
		LEFT JOIN
		tbl_company_rela f ON f.pk_PowerStation = t.powerStation_id
		WHERE
		f.pk_cpy_operate_id = (
		SELECT
		j.cpy_id
		FROM
		tbl_company j
		WHERE
		j.cpy_number = #{cpynum}
		)
		and t.province_code = #{val}
		GROUP
		BY
		t.city_code
	</select>

	<select id="getProPoints" parameterType="map" resultType="map">
		SELECT
		count(1) pCount,
	(select CONCAT(a.Province_Longitude,',',a.Province_Latitude) from tb_m_province a where a.province_id=t.province_code) pd
		FROM
		tbl_powerstation t
		LEFT
		JOIN tbl_company_rela f ON f.pk_PowerStation = t.powerStation_id
		WHERE
		f.pk_cpy_operate_id = (
		SELECT
		j.cpy_id
		FROM
		tbl_company j
		WHERE
		j.cpy_number = #{cpynum}
		)
		GROUP BY
		t.province_code
		<!-- select count(1) pCount,t.poSt_OwnProvinceCode pd from tbl_powerstation 
			t group by t.poSt_OwnProvinceCode -->
	</select>
</mapper> 