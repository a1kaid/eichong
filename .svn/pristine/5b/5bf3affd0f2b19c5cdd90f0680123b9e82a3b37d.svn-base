package com.wanma.ims.controller.fav;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wanma.ims.common.domain.FavCouponVarietyDO;
import com.wanma.ims.common.domain.UserDO;
import com.wanma.ims.common.domain.base.Pager;
import com.wanma.ims.constants.ResultCodeConstants;
import com.wanma.ims.controller.BaseController;
import com.wanma.ims.controller.result.JsonResult;
import com.wanma.ims.service.FavCouponService;
import com.wanma.ims.service.FavCouponVarietyService;

/**
 * 优惠券品种管理
 */
@RequestMapping("/fav")
@Controller
public class FavCouponVarietyController extends BaseController{
	/** 日志文件生成器 */
	private static Logger log = Logger.getLogger(FavCouponVarietyController.class);
	@Autowired
	private FavCouponService couponService;
	@Autowired
	private FavCouponVarietyService couponVarietyService;
	
	/**
	 * 优惠券品种列表
	 * @author mb
	 * @param 
	 * @return
	 */
	@RequestMapping(value = "/getCouponVarietyList")
	@ResponseBody
	public void getCouponVarietyList(@ModelAttribute FavCouponVarietyDO couponVariety,Pager pager,HttpServletRequest request){
		JsonResult batchResult = new JsonResult();
		List<FavCouponVarietyDO> couponVarietyList = null;
		long total =  0;
		try {
			total = couponVarietyService.getCouponVarietyCount(couponVariety);
			if (total <= pager.getOffset()) {
				pager.setPageNo(1L);
			}
			couponVariety.setPager(pager);
			couponVarietyList = couponVarietyService.getCouponVarietyList(couponVariety);
			pager.setTotal(total);
			batchResult.setDataObject(couponVarietyList);
			batchResult.setPager(pager);
		} catch (Exception e) {
			log.error(this.getClass()+".getCouponVarietyList() error:",e);
		}
		responseJson(batchResult); 
	}
	/**
	 * 新增优惠券品种
	 * @author mb
	 * @param 
	 * @return
	 */
	@RequestMapping(value = "/addCouponVariety")
	@ResponseBody
	public void addCouponVariety(@ModelAttribute FavCouponVarietyDO couponVariety ,HttpServletRequest request){
		JsonResult result = new JsonResult();
		UserDO loginUser = getCurrentLoginUser();
		try {
			//判断新增的现金劵品种是否重复
			if(couponVarietyService.judgeCovaActivityName(couponVariety.getCovaActivityName())!=0){
				responseJson(new JsonResult(false,ResultCodeConstants.FAILED,"现金券品种重复"));
				return;
			}
			couponVariety.setCovaCreateUserId(loginUser.getUserId()+"-"+loginUser.getUserName());//创建现金券品种的人
			couponVariety.setCovaUpdateUserId(loginUser.getUserId()+"-"+loginUser.getUserName());
			if(!couponVarietyService.addCouponVariety(couponVariety)){
				responseJson(new JsonResult(false,ResultCodeConstants.EXCEPTION,"现金券品种新增失败"));
				return;
			}
		} catch (Exception e) {
			log.error(this.getClass()+".addCouponVariety() error:",e);
			responseJson(new JsonResult(false,ResultCodeConstants.EXCEPTION,"现金券品种新增失败"));
			return;
		}
		responseJson(result); 
	}
	/**
	 * 根据现金券品种主键获取参数
	 * @author mb
	 */
	@RequestMapping(value = "/getCouponVarietyInfo")
	@ResponseBody
	private void getCouponVarietyInfo(@ModelAttribute FavCouponVarietyDO couponVariety,HttpServletRequest request) {
		JsonResult result = new JsonResult();
		try {
			couponVariety = couponVarietyService.getCouponVarietyById(couponVariety.getPkCouponVariety());
			result.setDataObject(couponVariety);
		} catch (Exception e) {
			log.error(this.getClass()+".getCouponVarietyInfo() error:",e);
			responseJson(new JsonResult(false,ResultCodeConstants.EXCEPTION,"查询失败"));
			return;
		}
		responseJson(result); 
	}
	/**
	 * 修改现金券品种
	 * @author mb
	 */
	@RequestMapping(value = "/changeCouponVariety")
	@ResponseBody
	private void changeCouponVariety(@ModelAttribute FavCouponVarietyDO couponVariety,HttpServletRequest request) {
		JsonResult result = new JsonResult();
		UserDO loginUser = getCurrentLoginUser();
		try {
			//修改现金券品种用户信息
			couponVariety.setCovaUpdateUserId(loginUser.getUserId()+"-"+loginUser.getUserName());
			//获取页面用户的选择 上架或者下架
			int covaStutas = couponVariety.getCovaStutas();
			if(covaStutas == 0){
				couponVarietyService.changeCouponVariety(couponVariety);//修改现金券品种
			}else if (covaStutas == 1) {
				couponService.removeCouponByCouponVarietyId(couponVariety.getPkCouponVariety());
				couponVarietyService.changeCouponVariety(couponVariety);
			}
		} catch (Exception e) {
			log.error(this.getClass()+".changeCouponVariety() error:",e);
			responseJson(new JsonResult(false,ResultCodeConstants.EXCEPTION,"查询失败"));
			return;
		}
		responseJson(result); 
	}
	
	
	
	
	
}
