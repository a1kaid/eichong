package com.wanma.ims.util;

import java.util.Random;
import java.util.UUID;

/**
 * 主键 生成工具
 */
public class PKUtil {
    /**
     * menu_id,菜单ID
     * 以62进制（字母加数字）生成19位UUID，最短的UUID
     *
     * @return
     */
    public static String generatePkMenuId() {
        UUID uuid = UUID.randomUUID();
        StringBuilder sb = new StringBuilder();
        sb.append(digits(uuid.getMostSignificantBits() >> 32, 8));
        sb.append(digits(uuid.getMostSignificantBits() >> 16, 4));
        sb.append(digits(uuid.getMostSignificantBits(), 4));
        sb.append(digits(uuid.getLeastSignificantBits() >> 48, 4));
        sb.append(digits(uuid.getLeastSignificantBits(), 12));
        return sb.toString();
    }

    private static String digits(long val, int digits) {
        long hi = 1L << (digits * 4);
        return NumbersUtil.toString(hi | (val & (hi - 1)), NumbersUtil.MAX_RADIX)
                .substring(1);
    }

    /**
     * role_id,角色ID
     * 10位随机数
     * 
     * @return
     */
    public static String generatePkRoleId() {
        return getRandomKey(10);
    }

    public static String getRandomKey(int length) {
        Random randGen = null;
        char[] numbersAndLetters = null;
        if (length < 1) {
            return null;
        }

        randGen = new Random();
        numbersAndLetters = ("0123456789abcdefghijklmnopqrstuvwxyz"
                + "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ").toCharArray();

        char[] randBuffer = new char[length];
        for (int i = 0; i < randBuffer.length; i++) {
            randBuffer[i] = numbersAndLetters[randGen.nextInt(71)];
        }
        return new String(randBuffer);
    }

    /**
     * 生成电桩编码
     */
    public static String generateElectricPileCode() {
        Random random = new Random();
        return "" + DateUtil.getDateFormat("yyyyMMddHHmmssSS") + random.nextInt(1000);
    }

    /**
	* <p>Description: 生成资金账户号</p>
	* 规则：  FA + 标识位：1.用户  2.公司 3.卡 + 标识位对应的ID(需补足5位) + 年月日时分秒的时间戳 + 修改的版本号
	* @param
	* @author bingo
	* @date 2017-7-4
	 */
	public static String generateAccountNo(Long id, Integer sysType){
		StringBuffer accountNO = new StringBuffer();
		accountNO.append("FA");
		accountNO.append(sysType);
		
		String strId = String.valueOf(id);
		int length = strId.length();
		String newId = "";
		if (sysType == 2) {
			newId = length == 1 ? ("0000" + strId) : length == 2 ? ("000" + strId) : length == 3 ? ("00" + strId) : length == 4 ? ("0" + strId) : strId;
		}else {
			newId = "0" + strId;
		}
		accountNO.append(newId);
		
		accountNO.append(DateUtil.getNow(DateUtil.TYPE_COMBINE_YMDHMS));
		accountNO.append("10");
		
		return accountNO.toString();
	}

    /**
     * 生成不带-的UUID
     *
     * @return UUID
     */
    public static String getUUID() {
        // 返回用UUID
        String uuidResult;
        // 临时用UUID
        String uuidTemp;
        // 取得UUID存储到临时用UUID
        uuidTemp = UUID.randomUUID().toString();

        // 替换掉所有-字符
        uuidResult = uuidTemp.replaceAll("-", "");

        // 返回UUID
        return uuidResult;
    }
}
