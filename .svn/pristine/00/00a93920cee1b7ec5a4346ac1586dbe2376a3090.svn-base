package com.wanma.ims.controller.integral;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wanma.ims.common.domain.IntegralActivityDO;
import com.wanma.ims.common.domain.IntegralRulesExtensionsDO;
import com.wanma.ims.common.domain.UserDO;
import com.wanma.ims.common.domain.base.Pager;
import com.wanma.ims.common.domain.bo.IntegralActivityAndRulesBO;
import com.wanma.ims.common.dto.BaseResultDTO;
import com.wanma.ims.constants.ResultCodeConstants;
import com.wanma.ims.controller.BaseController;
import com.wanma.ims.controller.result.JsonResult;
import com.wanma.ims.service.IntegralActivityService;

/**
 * 积分活动
 */
@RequestMapping("/integral")
@Controller
public class IntegralActivityController extends BaseController{
	
	private final Logger log = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private IntegralActivityService integralActivityService;
	
	/**
	* <p>Description: 获取积分活动列表</p>
	* @param
	* @author bingo
	* @date 2017-8-15
	 */
	@RequestMapping(value = "/getIntegralActivityList")
	@ResponseBody
	public void getIntegralActivityList(@ModelAttribute("pager") Pager pager,
			@ModelAttribute IntegralActivityDO integralActivity, Model model,HttpServletRequest request){
		JsonResult batchResult = new JsonResult();
		Long total = integralActivityService.getIntegralActivityCount(integralActivity);
		if (total <= pager.getOffset()) {
			pager.setPageNo(1L);
		}
		pager.setTotal(total);
		integralActivity.setPager(pager);
		
		List<IntegralActivityAndRulesBO> integralActivityList = integralActivityService.getIntegralActivityList(integralActivity);
		if (integralActivityList == null) {
			integralActivityList = new ArrayList<IntegralActivityAndRulesBO>();
		}
		for (IntegralActivityAndRulesBO integralActivityAndRulesBO : integralActivityList) {
			integralActivityAndRulesBO.setDirectionName(integralActivityAndRulesBO.getDirection().equals(0) ? "获取" : "消耗");
		}
		batchResult.setDataObject(integralActivityList);
		batchResult.setPager(pager);
		
		responseJson(batchResult);
	}	
	
	/**
	* <p>Description: 修改积分活动</p>
	* @param
	* @author bingo
	* @date 2017-8-15
	 */
	@RequestMapping(value = "/modifyIntegralActivity")
	@ResponseBody
	public void modifyIntegralActivity(@ModelAttribute IntegralActivityDO integralActivity, Model model, HttpServletRequest request) {
		//取当前登录用户
//		UserDO user = SessionMgr.getWebUser(request);
		UserDO user = getCurrentLoginUser();
		if (user == null) {
			log.error(this.getClass() + ".modifyIntegralActivity() error : " + ResultCodeConstants.ERROR_MSG_EMPTY_SESSION_USER);
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, ResultCodeConstants.ERROR_MSG_EMPTY_SESSION_USER));
			return;
		}
		
		BaseResultDTO baseResultDTO = new BaseResultDTO();
		try {
			integralActivity.setModifier(user.getUserId().toString());
			integralActivity.setGmtModified(new Date());
			baseResultDTO = integralActivityService.modifyIntegralActivity(integralActivity);
		} catch (Exception e) {
			log.error(this.getClass() + ".modifyIntegralActivity() error : ", e);
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, e.toString()));
		}
		
		if(!baseResultDTO.isSuccess()){
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, baseResultDTO.getErrorDetail()));
		}else {
			responseJson(new JsonResult());
		}
	}
	
	/**
	* <p>Description: 增加积分活动</p>
	* @param
	* @author bingo
	* @date 2017-8-15
	 */
	@RequestMapping(value = "/addIntegralActivity")
	@ResponseBody
	public void addIntegralActivity(@ModelAttribute IntegralActivityAndRulesBO integralActivityAndRulesBO, Model model, HttpServletRequest request) {
		//取当前登录用户
//		UserDO user = SessionMgr.getWebUser(request);
		UserDO user = getCurrentLoginUser();
		if (user == null) {
			log.error(this.getClass() + ".addIntegralActivity() error : " + ResultCodeConstants.ERROR_MSG_EMPTY_SESSION_USER);
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, ResultCodeConstants.ERROR_MSG_EMPTY_SESSION_USER));
			return;
		}
		
		String list = request.getParameter("list");
		if (list != null && !"".equals(list)) {
			JSONArray JsonList = JSONArray.fromObject(list);
			for (int i = 0; i < JsonList.size(); i++) {
				IntegralRulesExtensionsDO extDO = (IntegralRulesExtensionsDO)JSONObject.toBean(JsonList.getJSONObject(i), IntegralRulesExtensionsDO.class);
				integralActivityAndRulesBO.getExtList().add(extDO);
			}
		}
		
		BaseResultDTO baseResultDTO = new BaseResultDTO();
		try {
			integralActivityAndRulesBO.setCreator(user.getUserId().toString());
			integralActivityAndRulesBO.setModifier(user.getUserId().toString());
			integralActivityAndRulesBO.setGmtCreate(new Date());
			integralActivityAndRulesBO.setGmtModified(new Date());
			baseResultDTO = integralActivityService.addIntegralActivity(integralActivityAndRulesBO);
		} catch (Exception e) {
			log.error(this.getClass() + ".addIntegralActivity() error : ", e);
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, e.toString()));
		}
		
		if(!baseResultDTO.isSuccess()){
			responseJson(new JsonResult(false, ResultCodeConstants.FAILED, baseResultDTO.getErrorDetail()));
		}else {
			responseJson(new JsonResult());
		}
	}
}
